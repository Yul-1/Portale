FROM node:18-alpine

# Installa dipendenze di sistema necessarie
RUN apk add --no-cache python3 make g++ tini curl

# Crea directory di lavoro
WORKDIR /app

# Copia package files per installazione dipendenze
COPY package*.json ./

# Installa dipendenze come root
RUN npm cache clean --force && \
    npm install --legacy-peer-deps && \
    npm cache clean --force

# Crea utente non-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S react -u 1001 -G nodejs

# Copia il resto del codice
COPY --chown=react:nodejs . .

# Crea directory necessarie e imposta permessi
RUN mkdir -p /app/node_modules/.cache && \
    chown -R react:nodejs /app

# Per sviluppo, manteniamo root per evitare problemi di permessi
# In produzione, decommentare la riga seguente:
# USER react

# Espone la porta (solo documentazione)
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
CMD curl --fail http://localhost:3000/ || exit 1

# Comando di default per sviluppo
# Usa tini per garantire la propagazione dei segnali
# CMD ["npm", "start"] # Commenta questa riga
CMD ["tini", "--", "npm", "start"]