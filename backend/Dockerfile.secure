FROM python:3.11-slim

# Imposta variabili d'ambiente
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100

# Installa dipendenze di sistema minime
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    gosu \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Crea utente non-root prima di copiare i file
RUN groupadd -r portale -g 1000 && \
    useradd -r -u 1000 -g portale -s /sbin/nologin -c "Portale user" portale

# Crea directory di lavoro
WORKDIR /app

# Copia solo requirements per cache Docker layer
COPY --chown=portale:portale requirements.txt /app/

# Installa dipendenze Python come root
RUN pip install --upgrade pip && \
    pip install -r requirements.txt && \
    pip install --no-cache-dir gunicorn

# Copia il resto del codice
COPY --chown=portale:portale . /app/

# Crea directory per static e media
RUN mkdir -p /app/static /app/media && \
    chown -R portale:portale /app/static /app/media

# Rimuovi file non necessari
RUN find /app -type f -name "*.pyc" -delete && \
    find /app -type d -name "__pycache__" -delete

# Copia entrypoint script e rendilo eseguibile
COPY --chown=portale:portale ./entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Cambia a utente non-root
USER portale

# Espone la porta (solo documentazione)
EXPOSE 8000

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
  CMD python -c "import requests; requests.get('http://localhost:8000/health')" || exit 1

# Usa entrypoint script per gestire i permessi dei volumi e poi avvia l'applicazione
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# Comando di default
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--threads", "2", "--worker-class", "gthread", "--log-level", "info", "--access-logfile", "-", "--error-logfile", "-", "config.wsgi:application"]