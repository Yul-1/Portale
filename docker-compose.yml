version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: portale_db
    environment:
      POSTGRES_DB: ${DB_NAME:-portale_db}
      POSTGRES_USER: ${DB_USER:-portale_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-portale_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init/01_init.sql:/docker-entrypoint-initdb.d/01_init.sql  
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]  
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: portale_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: portale_backend
    environment:
      - DB_HOST=db                                   
      - DB_NAME=${DB_NAME:-portale_db}
      - DB_USER=${DB_USER:-portale_user}
      - DB_PASSWORD=${DB_PASSWORD:-portale_password}
      - DB_PORT=5432
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-django-insecure-dev-key}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-True}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,https://localhost}
      - REDIS_HOST=redis                              
      - REDIS_PORT=6379
      - RUN_MIGRATIONS=${RUN_MIGRATIONS:-true}
      - CREATE_SUPERUSER=${CREATE_SUPERUSER:-true}
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - django_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - frontend-network
      - backend-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    container_name: portale_frontend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - REACT_APP_API_URL=${REACT_APP_API_URL:-https://localhost/api}
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - frontend-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: portale_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - frontend-network
    restart: unless-stopped

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  frontend_node_modules:
  django_logs:
  nginx_logs: